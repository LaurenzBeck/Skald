[tool.poetry]
name = "skald"
version = "0.6.0"
description = "üìü a simple and efficient experiment logger for Python üêç"
keywords = ["logging", "tui"]
authors = ["Laurenz Farthofer <laurenz@hey.com>"]
repository = "https://github.com/laurenzbeck/skald"
packages = [{ include = "skald" }]
license = "MIT"
readme = "README.md"

[tool.poetry.scripts]
skald = "skald.cli:main"

[tool.poe.tasks]
test = "coverage run --source=skald -m pytest -vv --durations=8 tests"

[tool.poetry.dependencies]
python = "^3.11"
polars = "^1"
pandas = "^2"
beartype = "^0.18"
loguru = "^0.7"
# üßë‚Äçüíª UI
rich = "^13.7"
typer = "^0.12"
textual = "^0.76"
textual-dev = "^1.5"
textual-plotext = "^0.2"
aiofile = "^3.8.8"
matplotlib = "^3.9"

[tool.poetry.group.dev.dependencies]
ruff = "^0.5"
mkdocs = "^1.6.0"
mkdocs-material = "^9.5.20"
towncrier = "^23.11.0"
pre-commit = "^3.7.0"
poethepoet = "^0.26.1"
coverage = "^7.5.0"
pytest = "^8.2.0"

[tool.towncrier]
package = "skald"
directory = "changelog"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
underlines = ["", "", ""]
title_format = "## [{version}](https://github.com/laurenzbeck/skald/tree/{version}) - {project_date}"
issue_format = "[#{issue}](https://github.com/laurenzbeck/skald/issues/{issue})"

[[tool.towncrier.type]]
directory = "security"
name = "‚ùó Security"
showcontent = true

[[tool.towncrier.type]]
directory = "removed"
name = "‚ûñ Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "üî• Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "‚ûï Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "‚ú® Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "üêõ Fixed"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "üì¶ Misc"
showcontent = true

[tool.ruff]
exclude = ["examples/perlin_numpy.py"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.ruff.lint]
select = ["ALL"]  # Refer to https://docs.astral.sh/ruff/rules/ and click on the specific rule to understand why it is important
ignore = [
    "A002",
    "ANN003",
    "ANN101",
    "ANN401",
    "TCH002", # beartype needs types at runtime
    "PYI041", # also needed because beartype is stricter here
    "RUF002",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 20

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true

[tool.docformatter]
recursive = true
wrap-summaries = 0
wrap-descriptions = 0

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
